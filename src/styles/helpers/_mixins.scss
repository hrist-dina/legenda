@mixin wh($w, $h:$w) {
    width: $w;
    height: $h;
}

@mixin icon-bgc($icon-data) {
    background: url($icon-data) no-repeat center;
    background-size: contain;
}

@mixin header-tablet {
    @media screen and (min-width: $header-tablet){
        @content;
    }
}

@mixin slider-screen {
    @media screen and (min-width: $slider-screen){
        @content;
    }
}

@mixin container-padding {
    padding: 0 16px;
}

@mixin icon-counted() {
    position: relative;
    margin-right: 20px;
    &.has-count {
        &:before{
            @include md-block {
                @include wh(24px);
                top: -6px;
                right: -20px;
                font-size: 13px;
                font-style: normal;
                line-height: 16px;
            }
            content: attr(data-cnt);
            position: absolute;
            top: -16px;
            right: -10px;
            border-radius: 50%;
            @include wh(20px);
            display: flex;
            align-items: center;
            text-align: center;
            justify-content: center;
            color: #fff;
            background: #EF5026;
            font-size: 11px;
            font-style: normal;
            line-height: 16px;
        }
    }
}

@mixin icon-mobile-menu($height, $width) {
    position: relative;
    width: $width;
    height: $height;
    transition-duration: 0.5s;
}

@mixin icon-mobile-menu-before($height, $width, $top, $bg-color: $button-color) {
    content: "";
    position: absolute;
    top: $top;
    width: $width;
    height: $height;
    transition-duration: 0.5s;
    background-color: $bg-color;
}

@mixin icon-mobile-menu-after($height, $width, $top, $bg-color: $button-color) {
    content: "";
    position: absolute;
    top: $top;
    width: $width;
    height: $height;
    transition-duration: 0.5s;
    background-color: $bg-color;
}

@mixin skeleton-loader() {
    position: relative;
    overflow: hidden;
    &:before {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        left: -150px;
        width: 150px;
        height: 100%;
        animation: load 1.5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
        background: linear-gradient(to right, transparent 0%, #fff 50%, transparent 100%);
    }
}

@mixin rotate($deg: 180deg) {
    -webkit-transform: rotate($deg);
    -moz-transform: rotate($deg);
    -ms-transform: rotate($deg);
    -o-transform: rotate($deg);
    transform: rotate($deg);
}

@mixin hover-link {
    @include transitionEaseOutQuint(color);
    &:hover {
        color: #dc0000;
    }
}

@mixin error-message() {
    @include md-block {
        font-size: 16px;
        line-height: 22px;
    }
    font-size: 14px;
    line-height: 20px;
    color: $pink;
}


@mixin placeholder() {
    &::-webkit-input-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    /* Firefox 19+ */
    &:-moz-placeholder {
        @content;
    }
    /* Firefox 18- */
    &:-ms-input-placeholder {
        @content;
    }
}

@mixin outline-none() {
    &:focus, &:active {
        outline: none;
    }
    -webkit-touch-callout: initial;
    -webkit-user-select: initial;
    -khtml-user-select: initial;
    -moz-user-select: initial;
    -ms-user-select: initial;
    user-select: initial;
    -webkit-tap-highlight-color: transparent;
}
@mixin transition($property, $duration, $timing-function, $delay) {
    -webkit-transition: $property $duration $timing-function $delay;
    -moz-transition: $property $duration $timing-function $delay;
    -o-transition: $property $duration $timing-function $delay;
    transition: $property $duration $timing-function $delay;
}

@mixin transitionSomeProps($properties, $duration, $timing-function, $delay) {
    $item: false;
    @each $property in $properties {
        @if $item {
            $item: "#{$property $duration $timing-function $delay}, #{$item}";
        }
        @else {
            $item: $property $duration $timing-function $delay;
        }
    }
    -webkit-transition: #{$item};
    -moz-transition: #{$item};
    -o-transition: #{$item};
    transition: #{$item};
}

@mixin transitionEaseOutQuint($properties, $duration: .6s, $delay:0s) {
    @include transitionSomeProps($properties, $duration, cubic-bezier(0.23, 1, 0.32, 1), $delay);
}

@mixin margin-left-centered {
    @include from(1300px) {
        margin-left: #{calc((100% - 1280px) / 2 )};
        padding: 0 20px 0 0;
    }

    @include col-padding;
}

@mixin response-video {
    width: 100%;
    height: 0;
    position: relative;
    padding-bottom: 56.25%; /* 16:9 */

    & iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

@mixin empty-image() {
    position: relative;
    &:before {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-repeat: no-repeat;
        background-position: center;
        background-color: #fff;
        margin: auto;
        background-image: url(empty-image());
        z-index: 1;
    }
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@include keyframes(load) {
    from {
        left: -150px;
    }
    to {
        left: 100%;
    }
}